{"ast":null,"code":"var _jsxFileName = \"D:\\\\belajarReactjs\\\\react\\\\session-3\\\\pages\\\\product\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/layout\";\nimport { useRouter } from \"next/router\";\nimport { withApollo, useQuery, gql } from \"@apollo/client\"; //import { withApollo } from \"../../lib/apollo\";\n\nimport { Typography, Grid, Button, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport { cache } from \"../../lib/apollo/client\";\nimport { cartItemsVar } from \"../../apollo/resolver\";\nconst PRODUCT_DETAIL = gql`\n  query Product($id: String!) {\n    products(filter: { url_key: { eq: $id } }) {\n      items {\n        id\n        name\n        description {\n          html\n        }\n        image {\n          url\n        }\n        price_range {\n          maximum_price {\n            final_price {\n              value\n              currency\n            }\n          }\n          minimum_price {\n            final_price {\n              value\n              currency\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductPage() {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const classes = useStyles();\n  const router = useRouter();\n  const id = router.query.id;\n  const response = useQuery(PRODUCT_DETAIL, {\n    variables: {\n      id: id\n    }\n  });\n  const {\n    loading,\n    error,\n    data\n  } = response;\n\n  if (loading) {\n    return __jsx(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    });\n  }\n\n  if (error) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    }, \"Error ...\");\n  }\n\n  const products = data.products.items; // local state apollo\n\n  const cartItems = cartItemsVar();\n  const item = [{\n    id: products[0].id,\n    name: products[0].name,\n    price: products[0].price_range.minimum_price.final_price.value.toFixed(2),\n    img: products[0].image.url,\n    qty: count,\n    isDiscount: false\n  }]; //\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: classes.productimage,\n    src: products[0].image.url,\n    alt: products[0].name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.productName,\n    variant: \"h4\",\n    component: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, products[0].name), __jsx(Typography, {\n    className: classes.price,\n    variant: \"h6\",\n    component: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, `${products[0].price_range.minimum_price.final_price.currency} ${products[0].price_range.minimum_price.final_price.value.toFixed(2)}`), __jsx(\"div\", {\n    className: \"qty-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"qty-ket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \" QTY : \"), __jsx(\"button\", {\n    onClick: () => setCount(count - 1),\n    className: classes.buttonQty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 89\n    }\n  }, \"-\")), __jsx(\"span\", {\n    className: \"qty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \" \", count, \" \"), __jsx(\"button\", {\n    onClick: () => setCount(count + 1),\n    className: classes.buttonQty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 89\n    }\n  }, \"+\"))), __jsx(\"button\", {\n    onClick: () => {\n      if (count < 1) {\n        alert(\"QTY tidak boleh kurang dari satu!\");\n      } else {\n        // user\n        cache.writeQuery({\n          query: IS_LOGGED_IN,\n          data: {\n            isLoggedIn: true,\n            name: \"sofyan\"\n          }\n        }); // product\n\n        cartItemsVar([...cartItems, ...item]);\n        alert(\"Product berhasil dimasukan!\");\n      }\n    },\n    className: \"cta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Add to cart\"), __jsx(\"div\", {\n    className: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"desc-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Description\"), __jsx(\"div\", {\n    className: classes.productdesc,\n    dangerouslySetInnerHTML: {\n      __html: products[0].description.html\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    gridGap: theme.spacing(3)\n  },\n  formCart: {\n    display: \"grid\",\n    gridTemplateColumns: \"10% 30%\",\n    columnGap: \"20px\",\n    marginTop: 20\n  },\n  productimage: {\n    width: \"100%\"\n  },\n  productName: {\n    marginTop: 40,\n    fontWeight: \"bold\",\n    fontFamily: \"Montserrat\"\n  },\n  productdesc: {\n    fontSize: 14\n  },\n  price: {\n    fontFamily: \"Montserrat\",\n    fontSize: 25\n  },\n  productimage: {\n    marginTop: 40,\n    width: \"100%\"\n  },\n  buttonQty: {\n    padding: 10,\n    width: 38,\n    background: \"none\",\n    borderColor: \"grey\"\n  }\n}));\nexport default withApollo({\n  ssr: true\n})(ProductPage);","map":{"version":3,"sources":["D:/belajarReactjs/react/session-3/pages/product/[id].js"],"names":["Layout","useRouter","withApollo","useQuery","gql","Typography","Grid","Button","CircularProgress","makeStyles","useState","cache","cartItemsVar","PRODUCT_DETAIL","ProductPage","count","setCount","classes","useStyles","router","id","query","response","variables","loading","error","data","products","items","cartItems","item","name","price","price_range","minimum_price","final_price","value","toFixed","img","image","url","qty","isDiscount","productimage","productName","currency","buttonQty","alert","writeQuery","IS_LOGGED_IN","isLoggedIn","productdesc","__html","description","html","theme","container","display","gridTemplateColumns","gridGap","spacing","formCart","columnGap","marginTop","width","fontWeight","fontFamily","fontSize","padding","background","borderColor","ssr"],"mappings":"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","sourcesContent":["import Layout from \"../../components/layout\";\r\nimport { useRouter } from \"next/router\";\r\nimport { withApollo, useQuery, gql } from \"@apollo/client\";\r\n//import { withApollo } from \"../../lib/apollo\";\r\nimport { Typography, Grid, Button, CircularProgress } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\n\r\nimport { cache } from \"../../lib/apollo/client\";\r\nimport { cartItemsVar } from \"../../apollo/resolver\";\r\n\r\nconst PRODUCT_DETAIL = gql`\r\n  query Product($id: String!) {\r\n    products(filter: { url_key: { eq: $id } }) {\r\n      items {\r\n        id\r\n        name\r\n        description {\r\n          html\r\n        }\r\n        image {\r\n          url\r\n        }\r\n        price_range {\r\n          maximum_price {\r\n            final_price {\r\n              value\r\n              currency\r\n            }\r\n          }\r\n          minimum_price {\r\n            final_price {\r\n              value\r\n              currency\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ProductPage() {\r\n    const [count, setCount] = useState(0);\r\n    const classes = useStyles();\r\n    const router = useRouter();\r\n    const id = router.query.id;\r\n  \r\n    const response = useQuery(PRODUCT_DETAIL, {\r\n      variables: { id: id },\r\n    });\r\n  \r\n    const { loading, error, data } = response;\r\n  \r\n    if (loading) {\r\n      return <CircularProgress />;\r\n    }\r\n    if (error) {\r\n      return <Layout>Error ...</Layout>;\r\n    }\r\n  \r\n    const products = data.products.items;\r\n\r\n    // local state apollo\r\n  const cartItems = cartItemsVar();\r\n  const item = [\r\n    {\r\n      id: products[0].id,\r\n      name: products[0].name,\r\n      price: products[0].price_range.minimum_price.final_price.value.toFixed(2),\r\n      img: products[0].image.url,\r\n      qty: count,\r\n      isDiscount: false\r\n    }\r\n  ];\r\n  //\r\n\r\n  return (  \r\n    <Layout>\r\n      <Grid container spacing={12} justify=\"center\">\r\n        <Grid item xs={6}>\r\n          <img\r\n            className={classes.productimage}\r\n            src={products[0].image.url}\r\n            alt={products[0].name}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography className={classes.productName} variant=\"h4\" component=\"h4\">\r\n            {products[0].name}\r\n          </Typography>\r\n          <Typography className={classes.price} variant=\"h6\" component=\"h6\">\r\n            {`${\r\n              products[0].price_range.minimum_price.final_price.currency\r\n            } ${products[0].price_range.minimum_price.final_price.value.toFixed(\r\n              2\r\n            )}`}\r\n          </Typography>\r\n          <div className=\"qty-box\">\r\n              <span className=\"qty-ket\"> QTY : </span>\r\n              <button onClick={() => setCount(count - 1)} className={classes.buttonQty}><span>-</span></button>        \r\n              <span className=\"qty\"> {count} </span>\r\n              <button onClick={() => setCount(count + 1)} className={classes.buttonQty}><span>+</span></button>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => {\r\n              if (count < 1){\r\n                alert(\"QTY tidak boleh kurang dari satu!\");\r\n              }else{\r\n                // user\r\n                cache.writeQuery({\r\n                  query: IS_LOGGED_IN,\r\n                  data: {\r\n                    isLoggedIn: true,\r\n                    name: \"sofyan\",\r\n                  },\r\n                });\r\n\r\n                // product\r\n                cartItemsVar([...cartItems, ...item]);\r\n                alert(\"Product berhasil dimasukan!\");\r\n              }\r\n            }}\r\n          className=\"cta\">\r\n          Add to cart\r\n          </button>\r\n\r\n          <div className=\"desc\">\r\n            <span className=\"desc-title\">Description</span>\r\n            <div\r\n              className={classes.productdesc}\r\n              dangerouslySetInnerHTML={{ __html: products[0].description.html }}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(12, 1fr)\",\r\n      gridGap: theme.spacing(3),\r\n    },\r\n    formCart: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"10% 30%\",\r\n      columnGap: \"20px\",\r\n      marginTop: 20,\r\n    },\r\n    productimage: {\r\n      width: \"100%\",\r\n    },\r\n    productName: {\r\n      marginTop: 40,\r\n      fontWeight: \"bold\",\r\n      fontFamily: \"Montserrat\",\r\n    },\r\n    productdesc: {\r\n      fontSize: 14,\r\n    },\r\n    price: {\r\n      fontFamily: \"Montserrat\",\r\n      fontSize: 25,\r\n    },\r\n    productimage: {\r\n      marginTop: 40,\r\n      width: \"100%\",\r\n    },\r\n    buttonQty: {\r\n      padding: 10,\r\n      width: 38,\r\n      background: \"none\",\r\n      borderColor: \"grey\",\r\n    }\r\n  }));\r\n  \r\n  \r\n  export default withApollo({ ssr: true })(ProductPage);"]},"metadata":{},"sourceType":"module"}